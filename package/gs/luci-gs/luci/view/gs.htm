<%+header%>

<script type="text/javascript">

function handleSubmit(ev){
        let rows = document.getElementById("table").children

        let data = { token: '<%=token%>', gpios: [] };
        var xhr = new XHR();

        for (let i = 1; i < rows.length; i++) {
                let fields = rows[i].children
                const gpio = {
                        'controller_number': fields[0].children[0].value,
                        'pad_number': fields[1].children[0].value,
                        'direction': fields[2].children[0].value
                }
                data.gpios.push(gpio)
        }

        xhr.post("/cgi-bin/luci/admin/gs/configuration_set", data, function(xhr,j){
                                setTimeout(get_show_data, 500)
                        }
                )
 }

function get_show_data(){

         XHR.get('/cgi-bin/luci/admin/gs/configuration_get', { token: '<%=token%>' }, function(xhr, j) {
                let table = document.getElementById("table")
                while(table.firstChild)
                {
                        table.removeChild(table.lastChild)
                }
                // gpio_cnt = 0
                generateGpioHead(table);

                XHR.get('/cgi-bin/luci/admin/gs/state_get', { token: '<%=token%>' }, function(xhr, resp) {
                        let gpios = resp.gpios
                        let len = gpios.length
                        for (let k = 0; k < len; k++) {
                                const idd = gpios[k].controller_number + '.' + gpios[k].pad_number
                                const valuee = gpios[k].value

                                 generateGpio(gpios[k].controller_number,
                                         gpios[k].pad_number,
                                         gpios[k].direction,
                                         parseInt(valuee),
                                         gpios[k].alias
                                 )

                        }
                })
         });
}

function generateHeadField(class_name, text) {
        let col = document.createElement("div")
        col.className = class_name
        let col_text = document.createTextNode(text)
        col.appendChild(col_text)
        return col
}

function generateGpioOption(class_name, text)  {
        let col = document.createElement("div")
        col.className = class_name
        col.appendChild(text)
        return col
}

function generateGpioValue(class_name, text)  {
        let col = document.createElement("div")
        col.className = class_name
        col.appendChild(text)
        return col
}

function generateGpioAlias(value = '') {
        text = document.createTextNode(value)
        return text
}

function gpioToggled(e) {
        const cnt = e.target.id.split('.')[1]
        let controller = document.getElementById("controller." + cnt).value
        let pad = document.getElementById("pad." + cnt).value
        let data = { token: '<%=token%>', gpio: {} };
        var xhr = new XHR();
        data.gpio.controller_number = controller
        data.gpio.pad_number = pad
        data.gpio.value = e.target.checked ? 1 : 0

        xhr.post("/cgi-bin/luci/admin/gs/value_set", data, function(xhr,j) {
                }
        );
}

function generateGpioVal(controller_number, gpio_number, direction, value = 1, idd) {
        let label = document.createElement("label")
        label.className = "switch"
        let input = document.createElement("input")
        input.type = "checkbox"
        input.id = 'value.' + idd
        input.addEventListener('input', gpioToggled)
        input.checked = !!value
        let span = document.createElement("span")
        span.className = "slider round"
        label.appendChild(input)
        label.appendChild(span)
        return label
}

function generateGpioNew() {
        generateGpio(controller_number = 1, gpio_number = 1, direction = 'out', value = 0, alias = '', disabled = true)
}

function generateGpio(controller_number = 1, gpio_number = 1, direction = 'out', value = 0, alias = '', disabled = false) {
        let table = document.getElementById("table")
        let trow = document.createElement("div")
        trow.className = "tr"
        trow.id = controller_number + '.' + gpio_number

        table.appendChild(trow)
        trow.appendChild(generateGpioOption("td", generateGpioAlias(alias)))
        if(disabled === false) {
                trow.appendChild(generateGpioValue("td center", generateGpioVal(controller_number, gpio_number, direction, value, /*gpio_cnt*/trow.id)))
        } else {
                trow.appendChild(generateGpioValue("td center disabled", generateGpioVal(controller_number, gpio_number, direction, value, /*gpio_cnt*/trow.id)))
        }
}

function generateGpioHead(table) {
        let thead = document.createElement("div")
        thead.className = "tr table-titles"
        table.appendChild(thead)

        thead.appendChild(generateHeadField("th col-1 middle center", "Alias"))
        thead.appendChild(generateHeadField("th col-2 middle center", "Value"))
}

window.requestAnimationFrame(function() {
        let table = document.getElementById("table")
        get_show_data();

        setInterval(function () {
                let rows = document.getElementById("table").children
                XHR.get('/cgi-bin/luci/admin/gs/state_get', { token: '<%=token%>' }, function(xhr, resp) {
                        let gpios = resp.gpios
                        let len = gpios.length
                        for (let k = 0; k < len; k++) {
                                const idd = gpios[k].controller_number + '.' + gpios[k].pad_number
                                const valuee = gpios[k].value
                                for (let i = 1; i < rows.length; i++) {
                                        let row = rows[i]
                                        if (idd === row.id) {
                                                let value = document.getElementById("value." + idd)
                                                const new_val = (valuee === '1') ? true : false
                                                if (value.checked !== new_val) {
                                                        value.checked = new_val
                                                }
                                        }
                                }
                        }
                })
        },500)

});

</script>

<div style="display: flex; flex-direction: row; justify-content: space-between">
        <h2 name="content"><%:GPIO Configuration%></h2>
<!--        <button class="btn cbi-button cbi-button-action" onclick="generateGpioNew()"> <%:Add Gpio %> </button>-->
</div>
<div style="display: flex; flex-direction: row; justify-content: space-between">
        <link rel="stylesheet" href="<%=resource%>/gs.css" type="text/css" />
        <div id="table" class="table">
        </div>
</div>

<!--<div class="cbi-page-actions">-->
<!--        <div class="right" style="width: 100%; height: 100%">-->
<!--        <button class="btn cbi-button cbi-button-action" onclick="handleSubmit(event)"> <%:Save & Apply %> </button>-->
<!--        </div>-->
<!--</div>-->
<br>
